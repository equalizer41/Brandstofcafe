@using projectweb.Repositories

<div class="mb-4 ms-@((Niveau * 2))">
    <h5>@Categorie.Naam</h5>

    <div class="row">
        @foreach (var p in Producten.Where(p => p.CategorieId == Categorie.Id))
        {
            <div class="col-md-4">
                <div class="card mb-3">
                    <div class="card-body">
                        <h6>@p.Naam</h6>
                        <p>€@p.Prijs</p>

                        @foreach (var pac in p.AddOnCategorieen)
                        {
                            <label>@pac.AddOnCategorie.Naam</label>
                            @foreach (var optie in pac.AddOnCategorie.Opties)
                            {
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" />
                                    <label class="form-check-label">@optie.Naam</label>
                                </div>
                            }
                        }

                        <button class="btn btn-sm btn-primary mt-2"
                                @onclick="() => OnProductGekozen.InvokeAsync(p)">
                            Toevoegen
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Categorie.SubCategorieen != null && Categorie.SubCategorieen.Any())
    {
        @foreach (var sub in Categorie.SubCategorieen)
        {
            <CategorieNode Categorie="sub"
                           Producten="Producten"
                           Niveau="Niveau + 1"
                           OnProductGekozen="OnProductGekozen" />
        }
    }
</div>

@code {
    [Parameter] public Categorie Categorie { get; set; }
    [Parameter] public List<Product> Producten { get; set; }
    [Parameter] public EventCallback<Product> OnProductGekozen { get; set; }
    [Parameter] public int Niveau { get; set; } = 0;
}
