@using projectweb.Components.Flow
@using projectweb.Repositories
@inject BestellingStateService BestelState
@inject BestellingRepository BestellingRepo

@inject TafelRepository TafelRepo
@implements IDisposable
@inject IJSRuntime JS


<h3>Selecteer een tafel</h3>

<!-- Toont alle tafels in de tabel Tafels op basis van SectieID-->
<div class="row row-cols-1 row-cols-md-3 g-4 mb-4">
    @foreach (var t in Tafels)
    {
        <div class="col">
                <div class="card-body">
                <h5 class="card-title">Tafel @t.Naam</h5>
                <button class="btn btn-primary" @onclick="() => SelecteerTafel(t.Id)">

                    @(BestelState.GeselecteerdeTafel?.Id == t.Id ? "Sluit overzicht" : "Toon overzicht")
                </button>
                </div>
        </div>
    }
</div>


@code {
    [Parameter] public EventCallback<int> TafelIsGeselecteerd { get; set; }
    // Maakt een nieuwe lijst om Tafels in op te slaan
    private List<Tafel> Tafels { get; set; } = new();

    // Plaatst alle Tafels waarbij de sectieID gelijk is met de sectieid uit de bestelstate
    protected override void OnInitialized()
    {
        // Plaatst alleen Tafels die overeenkomen met de geselecteerde SectieId
        if (BestelState.GeselecteerdeSectie != null)
        {
            Tafels = TafelRepo.GetAll(BestelState.GeselecteerdeSectie.Id);
        }

        BestelState.OnChange += HerlaadTafel;
    }

    // Herlaad Tafels met de nieuwe SectieId
    private void HerlaadTafel()
    {
        if (BestelState.GeselecteerdeSectie != null)
        {
            Tafels = TafelRepo.GetAll(BestelState.GeselecteerdeSectie.Id);
        }

        StateHasChanged();
    }


    private async Task SelecteerTafel(int id)
    {
        // Haal de geselecteerde tafel direct op via de repository
        var geselecteerdeTafel = TafelRepo.GetById(id);

        if (geselecteerdeTafel == null)
            return;

        // Toggle: deselecteer de tafel als deze al geselecteerd is
        if (BestelState.GeselecteerdeTafel?.Id == geselecteerdeTafel.Id)
        {
            BestelState.SelecteerTafel(null); // Maak de selectie leeg
        }
        else
        {
            BestelState.SelecteerTafel(geselecteerdeTafel); // Selecteer de nieuwe tafel

            // Haal de laatste bestelling en ronde op via de repository
            var laatsteBestelling = BestellingRepo.GetLaatsteBestellingBijTafelID(geselecteerdeTafel.Id);

            if (laatsteBestelling != null)
            {
                var laatsteRonde = laatsteBestelling.Rondes.FirstOrDefault();  // De laatste ronde ophalen

                if (laatsteRonde != null)
                {
                    // Start een nieuwe bestelling met de laatste ronde
                    BestelState.StartNieuweBestellingMetRonde(laatsteBestelling, laatsteRonde);

                    // Open/sluit de collapse
                    await JS.InvokeVoidAsync("sluitAlleCollapses");
                }
            }
        }
        StateHasChanged();
    }



    public void Dispose()
    {
        BestelState.OnChange -= HerlaadTafel;
    }
}
